name: Release-plz

on:
  push:
    branches:
      - main

jobs:
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Debug repository context
        run: |
          echo "Repo:                     $GITHUB_REPOSITORY"
          echo "Actor (who triggered):    $GITHUB_ACTOR"
          echo "Repository owner:         ${{ github.repository_owner }}"
          echo "Ref:                      $GITHUB_REF"
          echo "Has RELEASE_PLZ_TOKEN?"; test -n "$RELEASE_PLZ_TOKEN" && echo "✔︎" || echo "✘"
          echo "Has CARGO_REGISTRY_TOKEN?"; test -n "$CARGO_REGISTRY_TOKEN" && echo "✔︎" || echo "✘"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        if: ${{ github.repository_owner == 'syncable-dev' }}
        uses: release-plz/action@v0.5
        with:
          command: release --manifest-path rust-mcp-server-syncable-cli/Cargo.toml
        env:
          GITHUB_TOKEN:       ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}


  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'syncable-dev' }}
    permissions:
      pull-requests: write
      contents: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Debug repository context
        run: |
          echo "Repo:                     $GITHUB_REPOSITORY"
          echo "Actor (who triggered):    $GITHUB_ACTOR"
          echo "Repository owner:         ${{ github.repository_owner }}"
          echo "Ref:                      $GITHUB_REF"
          echo "Has RELEASE_PLZ_TOKEN?"; test -n "$RELEASE_PLZ_TOKEN" && echo "✔︎" || echo "✘"
          echo "Has CARGO_REGISTRY_TOKEN?"; test -n "$CARGO_REGISTRY_TOKEN" && echo "✔︎" || echo "✘"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz PR
        uses: release-plz/action@v0.5
        with:
          command: pr --manifest-path rust-mcp-server-syncable-cli/Cargo.toml
        env:
          GITHUB_TOKEN:         ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
